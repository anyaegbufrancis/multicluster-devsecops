clusterGroup:
  name: hub
  isHubCluster: true
  storageClass: gp2

# Namespaces that are expected to be created.
# The pattern will apply these namespaces
# and creates an operator group for that namespace
  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - rhacs-operator
  - stackrox
  - policies
  - devsecops-ci
  - openshift-storage
  - quay-enterprise

#  subscriptions:  OpenShift Operator subscriptions from OLM/OperatorHub
#  - name: the Operator package name (required)
#    namespace: expected namespace as specified by Operator (defaults to openshift-operators)
#    channel: operator channel from package manifest (required)
#    csv: Operator CSV from package manifest.
#         only used if global.options.useCSV: true in values-global.yaml

  subscriptions:
    advanced-cluster-management:
      name: advanced-cluster-management
      namespace: open-cluster-management

    rhacs-operator:
      name: rhacs-operator  #packageName
      namespace: openshift-operators # operator namespace

    odf-operator:
      name: odf-operator
      namespace: openshift-storage

    quay-operator:
      name: quay-operator
      namespace: openshift-operators

# The following section is used by
# OpenShift GitOps (ArgoCD)
  projects:
  - hub
  - opp
  - golang-external-secrets

  sharedValueFiles:
    - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
    - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.global.clusterVersion }}.yaml' #   E:

  applications:
    acm:
      name: acm   #arbitary
      namespace: open-cluster-management
      project: opp
      path: common/acm
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
          - /spec/loggingCA

    # opp:
    #   name: opp
    #   namespace: openshift
    #   project: opp
    #   path: charts/hub/opp

    # vault:
    #   name: vault
    #   namespace: vault
    #   project: hub
    #   chart: vault
    #   repoURL: https://helm.releases.hashicorp.com
    #   targetRevision: v0.19.0
    #   overrides:
    #   - name: global.openshift
    #     value: "true"
    #   - name: injector.enabled
    #     value: "false"
    #   - name: ui.enabled
    #     value: "true"
    #   - name: ui.serviceType
    #     value: LoadBalancer
    #   - name: server.route.enabled
    #     value: "true"
    #   - name: server.route.host
    #     value: null
    #   - name: server.route.tls.termination
    #     value: edge
    #   - name: server.image.repository
    #     value: "registry.connect.redhat.com/hashicorp/vault"
    #   - name: server.image.tag
    #     value: "1.9.2-ubi"

    # golang-external-secrets:
    #   name: golang-external-secrets
    #   namespace: golang-external-secrets
    #   project: golang-external-secrets
    #   path: common/golang-external-secrets

    cli-tools:
      name: cli-tools
      namespace: openshift
      project: hub
      path: charts/hub/cli-tools

# This section is used by ACM
  managedClusterGroups:
  - name: devel
    helmOverrides:
    - name: clusterGroup.isHubCluster
      value: "false"
    clusterSelector:
      matchLabels:
        clusterGroup: devel
      matchExpressions:
      - key: vendor
        operator: In
        values:
          - OpenShift

  - name: secured
    helmOverrides:
    - name: clusterGroup.isHubCluster
      value: "false"
    clusterSelector:
      matchLabels:
        clusterGroup: secured
      matchExpressions:
      - key: vendor
        operator: In
        values:
          - OpenShift

#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#  - name: vendor-app
#    namespace: default
#    project: vendor
#    path: path/to/myapp
#    repoURL: https://github.com/vendor/applications.git
#    targetRevision: main

### Config Map ###
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: cluster-monitoring-config
#   namespace: openshift-monitoring
# data:
#   config.yaml: |
# ---
# ### Complete Config ###
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: cluster-monitoring-config
#   namespace: openshift-monitoring
# data:
#   config.yaml: |
#     alertmanagerMain:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     prometheusK8s:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 3Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     prometheusOperator:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     k8sPrometheusAdapter:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     kubeStateMetrics:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     telemeterClient:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     openshiftStateMetrics:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     thanosQuerier:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     nodeExporter:
#       resources:
#         limits:
#           cpu: 50m
#           memory: 150Mi
#         requests:
#           cpu: 20m
#           memory: 50Mi
#     monitoringPlugin:
#       resources:
#         limits:
#           cpu: 500m
#           memory: 1Gi
#         requests:
#           cpu: 200m
#           memory: 500Mi
#     prometheusOperatorAdmissionWebhook:
#       resources:
#         limits:
#           cpu: 50m
#           memory: 100Mi
#         requests:
#           cpu: 20m
#           memory: 50Mi
# ---
## Splunk Forwarder ###
# oc edit ClusterLogging instance -n openshift-logging
# apiVersion: "logging.openshift.io/v1"
# kind: "ClusterLogging"
# metadata:
#   name: "instance"
#   namespace: "openshift-logging"
#   annotations:
#     logging.openshift.io/preview-vector-collector: enabled
# spec:
#   collection:
#     type: "vector"
#     vector: {}
# ---
# # $ oc edit ClusterLogForwarder instance -n openshift-logging
# apiVersion: logging.openshift.io/v1
# kind: ClusterLogForwarder
# metadata:
#   name: instance
#   namespace: openshift-logging
# spec:
#   outputs:
#     - name: splunk-receiver
#       secret:
#         name: vector-splunk-secret
#       splunk: {}
#       type: splunk
#       url: 'http://splunk-service:8088'
#   pipelines:
#     - inputRefs:
#         - application
#         - infrastructure
#       name: test-app
#       outputRefs:
#         - splunk-receiver
# ---
# # oc -n openshift-monitoring get secret alertmanager-main --template='{{ index .data "alertmanager.yaml" }}' | base64 --decode > alertmanager.yaml
# global:
#     resolve_timeout: 5m
# route:
#   group_wait: 30s
#   group_interval: 5m
#   repeat_interval: 12h
#   receiver: default
#   routes:
#   - match:
#       alertname: DeadMansSwitch
#     repeat_interval: 5m
#     receiver: deadmansswitch
#   - match:
#       alertname: '*'
#     repeat_interval: 2m
#     receiver: wh
#   - match:
#       severity: critical
#     receiver: wh
#   - match:
#       severity: warning
#     receiver: wh
#   - match:
#       alertname: KubeAPILatencyHigh
#     receiver: wh
# receivers:
# - name: default
# - name: deadmansswitch
# - name: wh
#   webhook_configs:
#     - url: "<url of service now>" ## Service Now endpoint
---
